language: java
jdk:
  - oraclejdk8

branches:
  only:
    - master

before_install:
  - export MVN_VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
  - export MVN_ARIFACTID=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.artifactId}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
  - let version=${MVN_VERSION%%.*}
  - let new_version=version+1
  - mvn versions:set -DnewVersion=$new_version.0
  - export MVN_NEW_VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)


install:
  - mvn test
  - mvn package

before_deploy:
  - git config --global user.name "Travis CI"
  - git config --global user.email "builds@travis-ci.com"
  - git tag v$MVN_NEW_VERSION -a -m "Generated tag from pom.xml version"
  - export JAR_PATH=target/$MVN_ARIFACTID-$MVN_NEW_VERSION.jar

deploy:
  provider: releases
  api_key: $GITHUB_OAUTH_KEY
  file: $JAR_PATH
  skip_cleanup: true
  on:
    branch: master

after_deploy:
  - git remote rm origin
  - git remote add origin https://$GITHUB_OAUTH_KEY@github.com/jordanmarques/japscan-downloader.git
  - git checkout master
  - git add pom.xml
  - git commit -m "[skip ci] $MVN_ARIFACTID $new_version.0"
  - git push --set-upstream origin master

notifications:
  email: false